{"version":3,"sources":["components/QuoteBox.js","components/Controls.js","App.js","index.js"],"names":["QuoteBox","quote","generate","dblTap","useDoubleTap","id","Controls","TOAST","message","toast","type","className","onClick","e","preventDefault","node","document","querySelector","DomToImage","toPng","quality","filter","n","bgcolor","width","height","then","dataUrl","link","createElement","download","href","click","catch","encodeURIComponent","content","author","text","navigator","clipboard","writeText","App","useState","isLoaded","setLoadState","quoteData","setQuoteData","currQuote","setCurrQuote","currCount","setCurrentCount","url","a","source","axios","CancelToken","get","cancelToken","token","res","data","results","length","cancel","console","log","generateRandomQuote","rdm","Math","floor","random","pickedQuote","currQuoteLength","$","animate","opacity","this","filtered","q","_id","setTimeout","css","useEffect","axiosTokenSource","fetch","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","closeButton","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6eba96e1.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useDoubleTap } from 'use-double-tap'; // https://github.com/minwork/use-double-tap\r\nfunction QuoteBox({ quote, generate }) {\r\n    \r\n    const dblTap = useDoubleTap(()=>generate());\r\n\r\n    return (\r\n        <div id=\"new-quote\" {...dblTap}>\r\n            <div id=\"quote-box\">\r\n                <p id=\"watermark\">QUOTILE</p>\r\n                <p id=\"text\"></p>\r\n                <p id=\"author\"></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuoteBox;","import React from 'react'\r\nimport DomToImage from 'dom-to-image';\r\nimport * as FI from 'react-icons/fi'\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction Controls({ quote }) {\r\n\r\n    const TOAST = {\r\n        success: (message)=>{\r\n            toast(message, {type:'default'})\r\n        },\r\n        failed: (message)=>{\r\n            toast(message, {type:'dark'})\r\n        }\r\n    }\r\n\r\n    function save(e){\r\n        e.preventDefault();\r\n        let node = document.querySelector(\".main-frame\");\r\n        let filter = (n)=>n.id!==\"controls-container\";\r\n\r\n\r\n        DomToImage.toPng(node, {quality:1,\r\n            filter, \r\n            bgcolor:\"#fefefe\",\r\n            width: 720,\r\n            height: 720,})\r\n                .then(dataUrl=>{\r\n                    let link = document.createElement('a');\r\n                    link.download = 'quote.png';\r\n                    link.href = dataUrl;\r\n                    link.click();\r\n                    TOAST.success(\"Image download on progress. Please check your download folder.\")\r\n                }).catch(e=>{\r\n                    TOAST.failed(\"Error downloading image.\")\r\n                })\r\n    }\r\n    function copy(e){\r\n        e.preventDefault();\r\n        const text = `\"${quote?.content}\" —${quote?.author}`;\r\n        navigator.clipboard.writeText(text);\r\n        TOAST.success(\"Copied to clipboard!\");\r\n    }\r\n    return (    \r\n        <div id=\"controls-container\">\r\n            <a className=\"icon\" onClick={save} id=\"save-quote\">\r\n                <FI.FiSave />\r\n            </a>\r\n            <a className=\"icon\" id=\"tweet-quote\" href={`https://twitter.com/intent/tweet?hashtags=quotile&text=${encodeURIComponent(`\"${quote?.content}\" —  ${quote?.author}`)}`}>\r\n                <FI.FiTwitter />\r\n            </a>\r\n            <a className=\"icon\" id=\"copy-quote\" onClick={copy}>\r\n                <FI.FiCopy />\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controls;\r\n","/**\n * Suggestions:\n * - Do the one quote fetch per click. Problem: May be slower if have poor connection. Deliverable within a day.\n * - Use Redux. Problem: Inappropriate / Overkill for a one page, one goal application. Longer development process.\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport QuoteBox from './components/QuoteBox';\nimport Controls from './components/Controls'\n\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst API_URL = `http://quotable.io/quotes?limit=150?`;\n function App() {\n  const [ isLoaded, setLoadState ] = useState(false);\n  const [ quoteData, setQuoteData ] = useState([]);\n  const [ currQuote, setCurrQuote ] = useState({})\n  const [ currCount, setCurrentCount ] = useState(0);\n\n\n  function resizeBox(length){\n    if( length > 175){\n      $(\"#text\").css(\"font-size\", \"1.4rem\");\n      $(\"#author\").css(\"font-size\", \"1rem\");\n      $(\"#watermark\").css(\"font-size\", \"1rem\");\n     \n    }else{\n      \n      $(\"#text\").css(\"font-size\", \"1.8rem\");\n      $(\"#author\").css(\"font-size\", \"1.4rem\");\n      $(\"#watermark\").css(\"font-size\", \"1rem\");\n    }\n  }\n\n\n  async function fetch(url, source =  axios.CancelToken.source()){\n    setLoadState(false);\n    await axios.get(url, {cancelToken: source.token})\n        .then(res=>res.data.results)\n        .then(data=>{\n          setQuoteData(data); \n          setLoadState(true);\n          setCurrentCount(data.length+currCount);\n          source.cancel();\n        })\n        .catch(e=>{\n          console.log(e)\n          source.cancel()\n        });\n  }\n\n  function generateRandomQuote(){\n    const rdm = Math.floor(Math.random()*quoteData.length);\n    const pickedQuote = quoteData[rdm];\n    let currQuoteLength = pickedQuote?.content.length;\n\n    // ANIMATE WATERMARK\n    $('#watermark').animate({opacity: 0}, 500, function(){\n      $(this).animate({opacity: 1}, 500)\n    });\n\n    // ANIMATE QUOTE TEXT\n    $('#text').animate({opacity: 0}, 500, function(){\n      $(this).animate({opacity: 1}, 500)\n      $(this).text(pickedQuote?.content)\n    });\n\n    // ANIMATE AUTHOR TEXT\n    $('#author').animate({opacity: 0}, 500, function(){\n        $(this).animate({opacity: 1}, 500)\n        $(this).text(pickedQuote?.author)\n    });\n\n    const filtered = quoteData.filter(q=>q._id!=pickedQuote._id);\n\n    setCurrQuote(pickedQuote);\n    setQuoteData(filtered);\n    setCurrentCount(filtered.length);\n\n    setTimeout(() => {\n      resizeBox(currQuoteLength);\n    }, 500);\n\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n  useEffect(() => {\n    if(currCount<1){\n      setLoadState(false);\n    }\n  }, [currCount]); // reset if quoteData is empty\n\n  useEffect(()=>{\n    let axiosTokenSource = axios.CancelToken.source();\n    if(!isLoaded){\n        fetch(API_URL, axiosTokenSource);\n    }\n    return () => {\n      axiosTokenSource.cancel();\n    }\n  },[currCount, isLoaded]) // fetch onload\n\n  useEffect(() => {\n    generateRandomQuote();\n  }, [isLoaded])\n  return (\n    <div className=\"main-frame\">\n      \n      <QuoteBox generate={generateRandomQuote}/>\n      <Controls quote={currQuote}/>\n      \n      <ToastContainer\n      position=\"top-center\"\n      autoClose={3000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n      closeButton=\"false\"\n      />\n    </div>\n  )\n}\n \n export default App\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../src/scss/Main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}